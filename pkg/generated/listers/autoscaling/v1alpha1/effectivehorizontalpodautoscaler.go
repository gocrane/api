// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/gocrane/api/autoscaling/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// EffectiveHorizontalPodAutoscalerLister helps list EffectiveHorizontalPodAutoscalers.
// All objects returned here must be treated as read-only.
type EffectiveHorizontalPodAutoscalerLister interface {
	// List lists all EffectiveHorizontalPodAutoscalers in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.EffectiveHorizontalPodAutoscaler, err error)
	// EffectiveHorizontalPodAutoscalers returns an object that can list and get EffectiveHorizontalPodAutoscalers.
	EffectiveHorizontalPodAutoscalers(namespace string) EffectiveHorizontalPodAutoscalerNamespaceLister
	EffectiveHorizontalPodAutoscalerListerExpansion
}

// effectiveHorizontalPodAutoscalerLister implements the EffectiveHorizontalPodAutoscalerLister interface.
type effectiveHorizontalPodAutoscalerLister struct {
	indexer cache.Indexer
}

// NewEffectiveHorizontalPodAutoscalerLister returns a new EffectiveHorizontalPodAutoscalerLister.
func NewEffectiveHorizontalPodAutoscalerLister(indexer cache.Indexer) EffectiveHorizontalPodAutoscalerLister {
	return &effectiveHorizontalPodAutoscalerLister{indexer: indexer}
}

// List lists all EffectiveHorizontalPodAutoscalers in the indexer.
func (s *effectiveHorizontalPodAutoscalerLister) List(selector labels.Selector) (ret []*v1alpha1.EffectiveHorizontalPodAutoscaler, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.EffectiveHorizontalPodAutoscaler))
	})
	return ret, err
}

// EffectiveHorizontalPodAutoscalers returns an object that can list and get EffectiveHorizontalPodAutoscalers.
func (s *effectiveHorizontalPodAutoscalerLister) EffectiveHorizontalPodAutoscalers(namespace string) EffectiveHorizontalPodAutoscalerNamespaceLister {
	return effectiveHorizontalPodAutoscalerNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// EffectiveHorizontalPodAutoscalerNamespaceLister helps list and get EffectiveHorizontalPodAutoscalers.
// All objects returned here must be treated as read-only.
type EffectiveHorizontalPodAutoscalerNamespaceLister interface {
	// List lists all EffectiveHorizontalPodAutoscalers in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.EffectiveHorizontalPodAutoscaler, err error)
	// Get retrieves the EffectiveHorizontalPodAutoscaler from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.EffectiveHorizontalPodAutoscaler, error)
	EffectiveHorizontalPodAutoscalerNamespaceListerExpansion
}

// effectiveHorizontalPodAutoscalerNamespaceLister implements the EffectiveHorizontalPodAutoscalerNamespaceLister
// interface.
type effectiveHorizontalPodAutoscalerNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all EffectiveHorizontalPodAutoscalers in the indexer for a given namespace.
func (s effectiveHorizontalPodAutoscalerNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.EffectiveHorizontalPodAutoscaler, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.EffectiveHorizontalPodAutoscaler))
	})
	return ret, err
}

// Get retrieves the EffectiveHorizontalPodAutoscaler from the indexer for a given namespace and name.
func (s effectiveHorizontalPodAutoscalerNamespaceLister) Get(name string) (*v1alpha1.EffectiveHorizontalPodAutoscaler, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("effectivehorizontalpodautoscaler"), name)
	}
	return obj.(*v1alpha1.EffectiveHorizontalPodAutoscaler), nil
}
