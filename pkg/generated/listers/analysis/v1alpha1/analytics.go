// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/gocrane/api/analysis/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AnalyticsLister helps list Analytics.
// All objects returned here must be treated as read-only.
type AnalyticsLister interface {
	// List lists all Analytics in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Analytics, err error)
	// Analytics returns an object that can list and get Analytics.
	Analytics(namespace string) AnalyticsNamespaceLister
	AnalyticsListerExpansion
}

// analyticsLister implements the AnalyticsLister interface.
type analyticsLister struct {
	indexer cache.Indexer
}

// NewAnalyticsLister returns a new AnalyticsLister.
func NewAnalyticsLister(indexer cache.Indexer) AnalyticsLister {
	return &analyticsLister{indexer: indexer}
}

// List lists all Analytics in the indexer.
func (s *analyticsLister) List(selector labels.Selector) (ret []*v1alpha1.Analytics, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Analytics))
	})
	return ret, err
}

// Analytics returns an object that can list and get Analytics.
func (s *analyticsLister) Analytics(namespace string) AnalyticsNamespaceLister {
	return analyticsNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AnalyticsNamespaceLister helps list and get Analytics.
// All objects returned here must be treated as read-only.
type AnalyticsNamespaceLister interface {
	// List lists all Analytics in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Analytics, err error)
	// Get retrieves the Analytics from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Analytics, error)
	AnalyticsNamespaceListerExpansion
}

// analyticsNamespaceLister implements the AnalyticsNamespaceLister
// interface.
type analyticsNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Analytics in the indexer for a given namespace.
func (s analyticsNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Analytics, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Analytics))
	})
	return ret, err
}

// Get retrieves the Analytics from the indexer for a given namespace and name.
func (s analyticsNamespaceLister) Get(name string) (*v1alpha1.Analytics, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("analytics"), name)
	}
	return obj.(*v1alpha1.Analytics), nil
}
